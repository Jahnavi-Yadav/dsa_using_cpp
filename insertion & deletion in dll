
// Online C++ compiler to run C++ program online
#include <iostream>
#include <vector>
using namespace std;
struct Node{
    public:
    int data;
    Node* next;
    Node* back;
    public:
    Node(int data1, Node* next1, Node* back1){
        data=data1;
        next=next1;
        back=back1;
    }
    Node(int data1){
        data=data1;
        next=nullptr;
        back=nullptr;
    }
};
Node* convertArrtoDll(vector<int> &arr){
    Node* head=new Node(arr[0]);
    Node* prev=head;
    for(int i=1;i<arr.size();i++){
        Node* temp=new Node(arr[i],nullptr,nullptr);
        prev->next=temp;
        prev=temp;
    }
    return head;
}
void print(Node* head){
    while(head!=NULL){
        cout<<head->data<<" ";
        head=head->next;
    }
}
Node* insertbeforehead(Node* head, int val){
    Node* newnode=new Node(val,head,nullptr);
    head->back=newnode;
    return newnode;
    
}
Node* insertbeforetail(Node* head, int val){
    if(head->next==NULL){
        return insertbeforehead(head,val);
    }
    Node* tail=head;
    while(tail->next!=NULL){
        tail=tail->next;
    }
    Node* prev=tail->back;
    Node* newnode=new Node(val,tail,prev);
    prev->next=newnode;
    tail->back=newnode;
    return head;
}
/*Node* removekthElement(Node* head, int k){
    if(head==NULL){
        return NULL;
    }
    int cnt=0;
    Node* knode=head;
    while(knode!=NULL){
        cnt++;
        knode=knode->next;
        
    }
    Node* prev=knode->back;
    Node* front=knode->next;
    if(prev==NULL && front==NULL){
        delete knode;
        return NULL;
    }
    else if(prev==NULL){
        delete Head(head);
    }
    else if(front==NULL){
        delete Tail(head);
    }

}
*/

int main() {
    vector<int> arr={2,3,4,5};
    Node* head=convertArrtoDll(arr);
    //head=insertbeforehead(head,23);
    head=insertbeforetail(head,56);
    print(head);
    return 0;
}
